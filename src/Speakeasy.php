<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * Speakeasy - The Speakeasy Bar: A bar that serves drinks.
 * 
 * A secret underground bar that serves drinks to those in the know.
 * https://docs.speakeasy.bar - The Speakeasy Bar Documentation.
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 * @see https://docs.speakeasy.bar
 */
class Speakeasy
{
    /** SERVER_PROD - The production server. */
	public const SERVER_PROD = 'prod';
	
    /** SERVER_STAGING - The staging server. */
	public const SERVER_STAGING = 'staging';
	
    /** SERVER_CUSTOMER - A per-organization and per-environment API. */
	public const SERVER_CUSTOMER = 'customer';
	
	public const SERVERS = [
        /** The production server. */
		Speakeasy::SERVER_PROD => 'https://speakeasy.bar',
        /** The staging server. */
		Speakeasy::SERVER_STAGING => 'https://staging.speakeasy.bar',
        /** A per-organization and per-environment API. */
		Speakeasy::SERVER_CUSTOMER => 'https://{organization}.{environment}.speakeasy.bar',
	];
  	
    /**
     * The authentication endpoints.
     * 
     * @var Authentication $$authentication
     */
	public Authentication $authentication;
	
    /**
     * The drinks endpoints.
     * 
     * @var Drinks $$drinks
     */
	public Drinks $drinks;
	
    /**
     * The ingredients endpoints.
     * 
     * @var Ingredients $$ingredients
     */
	public Ingredients $ingredients;
	
    /**
     * The orders endpoints.
     * 
     * @var Orders $$orders
     */
	public Orders $orders;
	
	public Config $config;
	

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SpeakeasyBuilder
	 */
	public static function builder(): SpeakeasyBuilder
	{
		return new SpeakeasyBuilder();
	}

	/**
	 * @param SDKConfiguration $sdkConfiguration
	 */
	public function __construct(
		private SDKConfiguration $sdkConfiguration,
	) {
		
		$this->authentication = new Authentication($this->sdkConfiguration);
		
		$this->drinks = new Drinks($this->sdkConfiguration);
		
		$this->ingredients = new Ingredients($this->sdkConfiguration);
		
		$this->orders = new Orders($this->sdkConfiguration);
		
		$this->config = new Config($this->sdkConfiguration);
	}
}